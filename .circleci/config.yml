version: 2.1

orbs:
  python: circleci/python@2.1.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Run tests
          command: poetry run pytest
      - store_test_results:
          path: test-results

  build-docs:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Install MkDocs and plugins
          command: poetry add mkdocs mkdocs-material mkdocstrings[python]
      - run:
          name: Build documentation
          command: poetry run mkdocs build
      - persist_to_workspace:
          root: .
          paths:
            - site

  deploy-docs:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Deploy to GitHub Pages
          command: |
            git config user.email "ci-bot@hyperbliss.tech"
            git config user.name "signalrgb-python CI bot"
            git checkout gh-pages
            git pull origin gh-pages
            rm -rf *
            mv site/* .
            rm -rf site
            git add .
            git commit -m "Update documentation [ci skip]"
            git push https://${GITHUB_TOKEN}@github.com/hyperb1iss/signalrgb-python.git gh-pages

  release:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Build package
          command: poetry build
      - run:
          name: Publish to PyPI
          command: |
            poetry config pypi-token.pypi $PYPI_TOKEN
            poetry publish
      - run:
          name: Create GitHub Release
          command: |
            TAG=${CIRCLE_TAG}
            BODY=$(git log --format=%B -n 1 $CIRCLE_SHA1)
            curl -X POST "https://api.github.com/repos/hyperb1iss/signalrgb-python/releases" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"tag_name\": \"$TAG\", \"name\": \"Release $TAG\", \"body\": \"$BODY\"}"

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - build-docs:
          requires:
            - build-and-test
          filters:
            tags:
              only: /.*/
      - deploy-docs:
          requires:
            - build-docs
          filters:
            branches:
              only: main
      - release:
          requires:
            - build-and-test
            - deploy-docs
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
